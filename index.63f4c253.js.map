{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/runtime-93d7e36fb9d0d527.js","src/index.js","src/js/search.js","src/js/pagination.js","src/js/card.js","node_modules/@parcel/runtime-js/lib/runtime-e7495c6aa0b44627.js","src/js/modal.info.js","src/js/scroll.js"],"sourcesContent":["require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"EVgbq\\\":\\\"index.63f4c253.js\\\",\\\"khJCt\\\":\\\"No-Image-Placeholder.ffaf566f.jpg\\\",\\\"5UbS1\\\":\\\"index.a1296d98.css\\\",\\\"7nwxg\\\":\\\"library.9d1a66b3.js\\\"}\"));","import './js/modal-aboutMovie';\n\n// import { watchedBtn, queueBtn } from './js/add-watsh-que.js';\n\nimport './js/spinner';\n\nimport './js/movies-service';\nimport './js/search';\nimport './js/card';\nimport './js/modal.info';\nimport './js/trailer';\n\n\nimport './js/card';\nimport * as myModuleCard from './js/card';\n\nimport './js/addToWatched';\nimport './js/pagination';\n\nimport './js/addToWatched';\nimport './js/pagination';\n\nimport './js/scroll.js';\n\nimport './js/modal-aboutMovie';\nimport './js/modal-team';\nimport './js/darck-them';\n","\nimport moviesService from './movies-service.js';\nimport { createMovieCardMarkup } from './card.js';\nimport { renderPagination, FOR_SEARCH } from './pagination';\n\n\nconst searchFormEl = document.querySelector('.header-form__search');\nconst containerEl = document.querySelector('.container');\nconst moviesListEl = document.querySelector('.movies__list');\nconst paginationRef = document.querySelector('.pagination');\n\nsearchFormEl.addEventListener('submit', async event => {\n  event.preventDefault();\n  const searchInput = document.querySelector('.header-form__input');\n  const searchQuery = searchInput.value.trim();\n\n  if (searchQuery) {\n\n  moviesService.searchQuery = searchQuery;\n    moviesService.resetPage();\n\n    try {\n      moviesService.searchQuery = searchQuery;\n      moviesService.resetPage(); // reset the page to 1 for a new collection\n      moviesListEl.innerHTML = ''; // clear the movies list for a new collection\n      const movies = await moviesService.fetchSearchMovies();\n      if (movies.length === 0) {\n        paginationRef.innerHTML = '';\n        if (!document.querySelector('.search-result-not-found')) {\n          const searchResultNotFound = document.createElement('div');\n          searchResultNotFound.textContent =\n            'Search result not successful. Enter the correct movie name.';\n          searchResultNotFound.classList.add('search-result-not-found');\n          containerEl.style.position = 'relative';\n          searchResultNotFound.style.position = 'absolute';\n          searchResultNotFound.style.top = '-20px';\n          searchResultNotFound.style.left = '-10px';\n          searchFormEl.insertAdjacentElement('beforeend', searchResultNotFound);\n        }\n\n        searchInput.addEventListener('input', function () {\n          if (\n            (this.value.trim().length === 0 ||\n              this.value.trim().toLowerCase() ===\n                moviesService.searchQuery.toLowerCase()) &&\n            document.querySelector('.search-result-not-found')\n          ) {\n            document.querySelector('.search-result-not-found').remove();\n          }\n        });\n      } else {\n        createMovieCardMarkup(movies);\n        renderPagination(\n          moviesService.page,\n          moviesService.allPages,\n          FOR_SEARCH\n        );\n        if (document.querySelector('.search-result-not-found')) {\n          document.querySelector('.search-result-not-found').remove();\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n});\n\n\n\n\n\n\n// import moviesService from './movies-service.js';\n// import  {createMovieCardMarkup } from './card.js';\n\n// const searchForm = document.querySelector('.header-form__search');\n\n// searchForm.addEventListener('submit', async (event) => {\n//   event.preventDefault();\n//   const searchInput = document.querySelector('.header-form__input');\n//   const searchQuery = searchInput.value.trim();\n\n//   if (searchQuery) {\n//     moviesService.searchQuery = searchQuery;\n//     try {\n//       const movies = await moviesService.fetchSearchMovies();\n//       createMovieCardMarkup(movies);\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   }\n// });","import moviesService from './movies-service';\nimport { createMovieCardMarkup } from './card';\n\nexport const FOR_POPULAR = 1;\nexport const FOR_SEARCH = 2;\nexport let param = 1;\n\n// function testPaginetion() {\n//   moviesService.fetchPopularMovies().then((movies) => {\n//     console.log(movies);\n//     //console.log(moviesService.page);\n//     //console.log(moviesService.allPages);\n\n//     renderPagination(moviesService.page, moviesService.allPages);\n//   });\n// }\n\n//testPaginetion();\n\nconst paginationRef = document.querySelector('.pagination');\n\npaginationRef.addEventListener('click', onPaginationClick);\n\nfunction onPaginationClick(e) {\n  if (e.target.textContent === '...') return;\n\n  if (e.target.classList.contains('arrow-left')) moviesService.subtractPage();\n  if (e.target.classList.contains('arrow-right')) moviesService.addPage();\n  if (e.target.classList.contains('pagination__button'))\n    moviesService.page = Number(e.target.textContent);\n\n  if (param === 1) {\n    moviesService.fetchPopularMovies().then(movies => {\n      createMovieCardMarkup(movies);\n      renderPagination(moviesService.page, moviesService.allPages, param);\n    });\n  } else {\n    moviesService.fetchSearchMovies().then(movies => {\n      createMovieCardMarkup(movies);\n      renderPagination(moviesService.page, moviesService.allPages, param);\n    });\n  }\n  scrollToTop();\n}\n\nfunction scrollToTop() {\n  window.scrollTo(0, 0);\n}\n\nexport function renderPagination(page, pages, curParam) {\n  let markup = '';\n  param = curParam;\n  if (!page || page > pages ) return;\n\n  if (page > 1)\n    markup += `<li class=\"pagination__arrow-left arrow-left\"><svg class=\"arrow-left\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12.6666 8H3.33331\" stroke=\"black\" stroke-width=\"1.33333\" stroke-linecap=\"round\"\n          stroke-linejoin=\"round\" />\n        <path d=\"M7.99998 12.6666L3.33331 7.99998L7.99998 3.33331\" stroke=\"black\" stroke-width=\"1.33333\"\n          stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n      </svg></li>`;\n\n  if (page > 1)\n    markup += `<li class=\"pagination__button pagination__button-end\">1</li>`;\n\n  if (page > 4) markup += `<li class=\"pagination__points\">...</li>`;\n\n  if (page > 3) markup += `<li class=\"pagination__button\">${page - 2}</li>`;\n\n  if (page > 2) markup += `<li class=\"pagination__button\">${page - 1}</li>`;\n\n  markup += `<li class=\"pagination__button pagination__button-current\">${page}</li>`;\n\n  if (page + 1 < pages)\n    markup += `<li class=\"pagination__button\">${page + 1}</li>`;\n\n  if (page + 2 < pages)\n    markup += `<li class=\"pagination__button\">${page + 2}</li>`;\n\n  if (page + 4 < pages) markup += `<li class=\"pagination__points\">...</li>`;\n\n  if (page < pages)\n    markup += `<li class=\"pagination__button pagination__button-end\">${pages}</li>`;\n\n  if (page < pages)\n    markup += `<li class=\"pagination__arrow-right arrow-right scroll-top\"><svg class=\"arrow-right\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M3.33335 8H12.6667\" stroke=\"black\" stroke-width=\"1.33333\" stroke-linecap=\"round\"\n          stroke-linejoin=\"round\" />\n        <path d=\"M8.00002 12.6666L12.6667 7.99998L8.00002 3.33331\" stroke=\"black\" stroke-width=\"1.33333\"\n          stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n      </svg></li>`;\n\n  paginationRef.innerHTML = markup;\n}\n","import moviesService from './movies-service';\nimport { renderPagination, FOR_POPULAR } from './pagination';\nimport noimage from '../image/No-Image-Placeholder.jpg';\n\nconst refs = {\n  moviesDivEl: document.querySelector('.movies__container'),\n  moviesListEl: document.querySelector('.movies__list'),\n};\n\nrenderMovieCard();\n\nasync function renderMovieCard(movies) {\n  try {\n    const movies = await moviesService.fetchPopularMovies();\n    // console.log(movies);\n    createMovieCardMarkup(movies);\n    renderPagination(moviesService.page, moviesService.allPages, FOR_POPULAR);\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function createMovieCardMarkup(movies) {\n  const movieCardMarkup = movies\n    .map(({ posterPath, title, genreIds, releaseDate, id }) => {\n      let poster = posterPath;\n      if (\n        posterPath === 'https://image.tmdb.org/t/p/w500null' ||\n        posterPath ===\n          'https://image.tmdb.org/t/p/w500/mNSqObjKszcxr55buQafQF9ARiC.jpg'\n      ) {\n        poster = noimage;\n      }\n      let genre = genreIds;\n      if (!genreIds) {\n        genre = 'Genre: Undefined';\n      }\n      let year = releaseDate;\n      if (!releaseDate) {\n        year = 'Release date: Undefined';\n      }\n\n      return `\n           <li class=\"movies__item\" data-movies=\"${id}\">\n                <div class=\"movies__thumb\">\n                    <img class=\"movies__img\" src=\"${poster}\" alt=\"${title}\"/>\n                </div>\n                    <p class=\"movies__title\">${title}</p>\n                    <p class=\"movies__info\">${genre} | ${year}</p>\n            </li>\n          `;\n    })\n    .join('');\n  refs.moviesListEl.innerHTML = movieCardMarkup;\n}\n","module.exports = require('./helpers/bundle-url').getBundleURL('EVgbq') + require('./helpers/bundle-manifest').resolve(\"khJCt\");","import moviesService from './movies-service';\n\nasync function renderMovie(currentMovieId) {\n  try {\n    const movie = await moviesService.fetchFullInfoMovie(currentMovieId);\n    console.log(movie);\n    const createMovieMarkup = `<button class=\"btn-modal-close-about-movie\" data-close-modal=\"btn-modal-close-about-movie\" type=\"button\">\n            <svg class=\"icon-close\">\n                <use href=\"./image/img_modal-aboutMovie/symbol-defs.svg#icon-close\" class=\"iconSVG-close\"></use>\n            </svg>\n        </button>\n <img src=\"${movie.backdropPath}\"\n            alt=\"images-movie\" class=\"images-movie-modal\">\n<div class=\"about-movie\">\n<h1 class=\"name-movie\">${movie.title}</h1>\n            <div class=\"characteristics-container\">\n                <ul class=\"characteristics-list\">\n                    <li class=\"characteristics-element\">\n                        <p class=\"characteristic-text\">Vote / Votes </p>\n                    </li>\n                    <li class=\"characteristics-element\">\n                        <p class=\"characteristic-text\">Popularity</p>\n                    </li>\n                    <li class=\"characteristics-element\">\n                        <p class=\"characteristic-text\">Original Title</p>\n                    </li>\n                    <li class=\"characteristics-element\">\n                        <p class=\"characteristic-text\">Genre</p>\n                    </li>\n                </ul>\n                <ul class=\"characteristics-value-list\">\n                    <li class=\"characteristics-value-element\">\n                          <p class=\"characteristics-value-text\"><span class=\"rating-movie\">${movie.voteAverage}</span class=\"characteristic-text\"><span> / </span>${movie.vote_count}\n                        </p>\n                    </li>\n                    <li class=\"characteristics-value-element\">\n                        <p class=\"characteristics-value-text\">${movie.popularity}</p>\n                    </li>\n                    <li class=\"characteristics-value-element\">\n                        <p class=\"characteristics-value-text\">${movie.original_title}</p>\n                    </li>\n                    <li class=\"characteristics-value-element\">\n                        <p class=\"characteristics-value-text\">${movie.genres}</p>\n                    </li>\n                </ul>\n\n            </div>\n            <p class=\"about-text\">About</p>\n            <p class=\"about-movie-text\">${movie.overview}\n            </p>\n <div class=\"btn-container\">\n                <button class=\"btn-add-watched\" type=\"button\">add to Watched</button>\n                <button class=\"btn-add-queue\" type=\"button\">add to queue</button>\n            </div>\n        </div>\n`;\n\n    refs.modalContainer.innerHTML = createMovieMarkup;\n    document\n      .querySelector('.btn-modal-close-about-movie')\n      .addEventListener('click', onCloseModalAboutMovies);\n  } catch (error) {\n    console.log(error);\n  }\n}\n","const scrollUp = {\n    el: document.querySelector('.scroll'),\n    show() {\n      this.el.classList.remove('scroll_hide');\n    },\n    hide() {\n      this.el.classList.add('scroll_hide');\n    },\n    addEventListener() {\n      window.addEventListener('scroll', () => {\n        const scrollY = window.scrollY || document.documentElement.scrollTop;\n        scrollY > 400 ? this.show() : this.hide();\n      });\n      document.querySelector('.scroll').onclick = () => {\n        window.scrollTo({\n          top: 0,\n          left: 0,\n          behavior: 'smooth'\n        });\n      }\n    }\n  }\n  \n  scrollUp.addEventListener();"],"names":["parcelRequire","register","JSON","parse","$bpxeT","$dfaf77c789ce7a24$export$6f7d1d9d04558207","$eFtRB","$dfaf77c789ce7a24$var$paginationRef","document","querySelector","$dfaf77c789ce7a24$export$825408fbca4f2040","page","pages","curParam","markup","concat","innerHTML","addEventListener","e","target","textContent","classList","contains","default","subtractPage","addPage","Number","fetchPopularMovies","then","movies","$eff785268c22474a$export$78ff0b4cb0823d10","allPages","fetchSearchMovies","window","scrollTo","$f0c3503b2078a4ca$exports","getBundleURL","resolve","$eff785268c22474a$var$refs","moviesDivEl","moviesListEl","$eff785268c22474a$var$_renderMovieCard","$parcel$interopDefault","$2TvXO","mark","_callee","_ctx","sent","console","log","t0","apply","this","arguments","movieCardMarkup","map","param","posterPath","title","genreIds","releaseDate","id","poster","genre","year","join","$eff785268c22474a$var$renderMovieCard","$d35904b1c7f1c41e$var$searchFormEl","$d35904b1c7f1c41e$var$containerEl","$d35904b1c7f1c41e$var$moviesListEl","$d35904b1c7f1c41e$var$paginationRef","event","searchInput","searchQuery","searchResultNotFound","preventDefault","value","trim","resetPage","length","createElement","add","style","position","top","left","insertAdjacentElement","toLowerCase","remove","el","show","hide","scrollY","documentElement","scrollTop","_this","onclick","behavior"],"version":3,"file":"index.63f4c253.js.map"}